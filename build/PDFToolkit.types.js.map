{"version":3,"file":"PDFToolkit.types.js","sourceRoot":"","sources":["../src/PDFToolkit.types.ts"],"names":[],"mappings":"","sourcesContent":["export type PDFToolkitModuleEvents = {\n  onProgress: (event: {\n    progress: number;\n    page: number;\n    total: number;\n  }) => void;\n};\n\n/**\n * PDF 변환 옵션 타입\n */\nexport interface PDFConversionOptions {\n  /**\n   * 이미지 크기 비율 (1.0 = 원본 크기)\n   * 예: 0.5 = 50% 크기, 2.0 = 200% 크기\n   */\n  scale?: number;\n\n  /**\n   * 이미지 압축률 (0.0 ~ 1.0, 기본값: 0.7)\n   * 1.0은 최대 품질(최소 압축), 0.0은 최저 품질(최대 압축)\n   */\n  compressionQuality?: number;\n}\n\n/**\n * PDFToolkit 네이티브 모듈 타입\n */\nexport interface PDFToolkitModuleType {\n  /**\n   * 이벤트 리스너 추가\n   * @param eventName 이벤트 이름\n   * @param listener 콜백 함수\n   */\n  addListener(eventName: string, listener: (...args: any[]) => void): void;\n\n  /**\n   * 모든 이벤트 리스너 제거\n   * @param eventName 이벤트 이름\n   */\n  removeAllListeners(eventName: string): void;\n\n  /**\n   * PDF 파일의 모든 페이지를 이미지로 변환\n   * @param pdfPath PDF 파일 경로\n   * @param options 변환 옵션\n   * @returns 이미지 경로 리스트\n   */\n  convertToImages(\n    pdfPath: string,\n    options?: PDFConversionOptions\n  ): Promise<string[]>;\n\n  /**\n   * PDF 파일의 이름만 추출\n   * @param pdfPath PDF 파일 경로\n   * @returns 파일명 (경로 제외, 확장자 포함)\n   */\n  getFileName(pdfPath: string): Promise<string>;\n\n  /**\n   * PDF 파일의 특정 페이지만 이미지로 변환\n   * @param pdfPath PDF 파일 경로\n   * @param pageNumber 페이지 번호 (0부터 시작)\n   * @param options 변환 옵션\n   * @returns 변환된 이미지 경로\n   */\n  getPageThumbnail(\n    pdfPath: string,\n    pageNumber: number,\n    options?: PDFConversionOptions\n  ): Promise<string>;\n}\n"]}